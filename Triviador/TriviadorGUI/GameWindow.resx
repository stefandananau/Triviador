<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>